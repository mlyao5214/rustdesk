name: SakuraFrp builds

on: [workflow_dispatch]

env:
  LLVM_VERSION: "15.0.6"
  FLUTTER_VERSION: "3.10.5"
  FLUTTER_RUST_BRIDGE_VERSION: "1.75.3"
  TAG_NAME: "edge"
  VERSION: "1.2.0"

jobs:
  build-for-windows-flutter:
    name: x86_64-pc-windows-msvc (windows-2019)
    runs-on: windows-2019
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Cache [Install LLVM and Clang]
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: |
            C:/Program Files/LLVM
            ./llvm
          key: llvm-${{ env.LLVM_VERSION }}

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ env.LLVM_VERSION }}
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Cache [Install Rust toolchain]
        id: cache-rust
        uses: actions/cache@v3
        with:
          path: ~/.rustup
          key: rust-stable-x86_64-pc-windows-msvc

      - if: ${{ steps.cache-rust.outputs.cache-hit != 'true' }}
        name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true
          profile: minimal # minimal component installation (ie, no documentation)

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: windows-2019

      - name: Install flutter rust bridge deps
        run: |
          cargo install flutter_rust_bridge_codegen --version ${{ env.FLUTTER_RUST_BRIDGE_VERSION }} --features "uuid"
          flutter --disable-telemetry
          Push-Location flutter ; flutter pub get ; Pop-Location
          ~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart

      - name: Cache [Install vcpkg dependencies]
        id: cache-vcpkg
        uses: actions/cache@v3
        with:
          path: C:\rustdesk_thirdpary_lib
          key: vcpkg

      - if: ${{ steps.cache-vcpkg.outputs.cache-hit != 'true' }}
        name: Install vcpkg dependencies
        run: |
          cd C:\
          git clone https://github.com/Kingtous/rustdesk_thirdpary_lib --depth=1

      - name: Build rustdesk
        env:
          VCPKG_ROOT: C:\rustdesk_thirdpary_lib\vcpkg
        run: python3 .\build.py --portable --hwcodec --flutter --feature IddDriver

      # TODO: figure out a way to sign binaries with hardware key

      - name: Build self-extracted executable
        shell: bash
        run: |
          pushd ./libs/portable
          python3 ./generate.py -f ../../flutter/build/windows/runner/Release/ -o . -e ../../flutter/build/windows/runner/Release/rustdesk.exe
          popd
          mkdir -p ./SignOutput
          mv ./target/release/rustdesk-portable-packer.exe ./SignOutput/rustdesk-natfrp-${{ env.VERSION }}-x86_64.exe

      # TODO: figure out a way to sign binaries with hardware key

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: edge
          files: |
            ./SignOutput/rustdesk-*.exe
